buckets=11
specs=14
=====================================
:::OBJECT
this.topOfStack <= daikon.Quant.size(this.theArray)-1
this.theArray != null
=====================================
:::POSTCONDITION
FuzzedInvariant ( Integer_Variable_0 != Integer_Variable_1 + 0 ) holds for: <this.topOfStack, orig(this.topOfStack)>
FuzzedInvariant ( Integer_Variable_0 < #(StackAr.theArray) ) holds for: <orig(this), this.topOfStack>
FuzzedInvariant ( (Integer_Variable_0 <= Integer_Variable_1) iff (Integer_Variable_1 != -1) ) holds for: <this.topOfStack, orig(this.topOfStack)>
FuzzedInvariant ( Integer_Variable_0 = Integer_Variable_1 - 1 ) holds for: <this.topOfStack, orig(this.topOfStack)>
FuzzedInvariant ( Integer_Variable_0 <= #(StackAr.theArray) ) holds for: <orig(this), this.topOfStack>
this.topOfStack < daikon.Quant.size(this.theArray)
FuzzedInvariant ( Integer_Variable_0 <= 1 ) holds for: this.topOfStack
FuzzedInvariant ( (Integer_Variable_0 > 1) implies (Integer_Variable_1 = 0) ) holds for: <this.topOfStack, orig(this.topOfStack)>
FuzzedInvariant ( Integer_Variable_0 >= Integer_Variable_1 + -1 ) holds for: <this.topOfStack, orig(this.topOfStack)>
FuzzedInvariant ( (Integer_Variable_0 = 0) or (Integer_Variable_1 != 1) ) holds for: <this.topOfStack, orig(this.topOfStack)>
this.topOfStack == -1
daikon.Quant.size(this.theArray) == 5 || daikon.Quant.size(this.theArray) == 10 || daikon.Quant.size(this.theArray) == 35
